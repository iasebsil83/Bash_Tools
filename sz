#!/bin/bash




# ---- DECLARATIONS ----
verbose_mode=0
only_files=0
recursive=0
include_hidden_files=0




# ---- UTILS ----

#get size of one element ($1:filename)
function sz_oneElement() {
	file_stat=$(stat $1 2>/dev/null) || {
		echo '0'
		return 1
	}

	#get only size field (the 6th)
	field=0
	for e in $file_stat; do

		#increase field number
		field=$(($field+1))

		#get size field
		if [[ $field == 4 ]]; then
			echo $e
		fi
	done
}




# ---- SZ EXECUTION ----

#gathering options ($@:all parameters)
function sz_exec() {
	currentPath=''

	#check arguments
	for arg in $@; do
		case $arg in

			#all files
			'-a' | '--all')
				include_hidden_files=1
			;;

			#exclude directories
			'-f' | '--files')
				only_files=1
			;;

			#recursive
			'-r' | '--recursive')
				recursive=1
			;;

			#verbose
			'-v' | '--verbose')
				verbose=1
			;;

			#undefined option
			-*)
				echo "sz: Undefined option '$1'."
				exit 1
			;;

			#element found (not an option)
			*)
				if [[ -e $arg ]]; then
					currentPath=$arg
					break
				else
					echo "sz: Element '$arg' does not exist."
					exit 1
				fi
			;;
		esac
	done

	#check if currentPath has been set
	if [[ $currentPath == '' ]]; then
		currentPath=$PWD
	fi

	#recursivity
	if [[ $recursive == 1 ]]; then

		#hidden files
		if [[ $include_hidden_files == 1 ]]; then
			cmd="travelfs -s -a $currentPath echo CURRENT"
		else
			cmd="travelfs -s    $currentPath echo CURRENT"
		fi
	else

		#hidden files
		if [[ $include_hidden_files == 1 ]]; then
			cmd="fulls -a $currentPath"
		else
			cmd="fulls    $currentPath"
		fi
	fi

	#gather sizes
	totalSize=0
	elemNbr=0
	for e in $($cmd); do

		#only files
		if [[ $only_files == 1 && ! -f $e ]]; then
			continue
		fi

		#get element size or skip it
		currentSize=$(sz_oneElement $e) || {
			echo "sz: Element '$e' not found (skipped)."
			elemNbr=$((elemNbr-1))
		}

		#verbose
		if [[ $verbose == 1 ]]; then
			echo "  "$currentSize" bytes"$'\t'$e
		fi

		#accumulate size & number
		totalSize=$((totalSize+currentSize))
		elemNbr=$((elemNbr+1))
	done
	echo $elemNbr" elements "$totalSize" bytes"
}




# ---- MAIN ----
case $1 in

	#option 1 : help
	'-h' | '--help')
		echo "Usage : sz [option(s)] [file(s)]"
		echo "Gives the size of some elements in bytes."
		echo "Also gives the number of elements counted."
		echo "If no file is given, all elements in the current directory are selected."
		echo
		echo "Options :"
		echo "  -a, --all       : Include hidden elements."
		echo "  -f, --files     : Analyse only files (no folder/stream/...)."
		echo "  -h, --help      : Shows this help message."
		echo "  -r, --recursive : Search recursively."
		echo "  -v, --verbose   : Display the details of every element counted."
		echo
		echo "Examples :"
		echo "  > sz"
		echo "  #Gather the size of each element in the current directory."
		echo
		echo "  > sz -r -v foldy"
		echo "  #get the size of all the elements in folder 'foldy' and all its subdirectories."
		echo "  #also prints the name of each filename focused."
		echo
		echo "This command is part of \"Bash Tools\"."
		echo "For more information about \"Bash Tools\", please check :"
		echo "    https://github.com/iasebsil83/Bash_Tools"
	;;

	#options or not => gather options
	*)
		sz_exec $@
	;;
esac
